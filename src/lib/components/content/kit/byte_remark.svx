---
title: "Remarkable Bytes"
created_at: "2025-04-12"
topics: ["config","mdsvex","remark","ux_ui"]
excerpt: "An overview of my style ecosystem: Mdsvex linting and more!"
pinned: true
seo_type: "article"
---
<!-- possible topics: noise, rgb, glsl, p3js, d3js, music, data_vis -->
<!-- https://www.shadertoy.com/view/XsXXDn -->
## The Plan

Here's the plan going forward:

```bash
pnpm run dev --host
```

```py
def fibonacci(n):
  """Return the nth Fibonacci number."""
    if n <= 0:
        return 0
    elif n == 1:
        return 1
    else:
        return fibonacci(n-1) + fibonacci(n-2)

print([fibonacci(i) for i in range(10)])  
# Output: [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]
```

```scss
code {
 color: $code_0;
 font-weight: bold;
 text-wrap: wrap;
}
```

```css
code {
 color: $code_0;
 font-weight: bold;
 text-wrap: wrap;
}
```

```js
let d = new Date();
seizeThe = d.getDay();
console.log(`Seize the ${seizeThe}`)
```

```svelte
<script>
import a as 'this';
</script>
```

```glsl
#ifdef GL_ES
precision mediump float;
#endif

uniform vec2 u_resolution;
uniform float u_time;

float circleGEO(vec2 position, float radius){
    return step(radius, length(position - vec2(0.5)));
}

void main() {
  vec2 uv = ((gl_FragCoord.xy - (u_resolution.xy * 0.5)) / u_resolution.y);
  // Adjust color based on audio data
  float colorIntensity = smoothstep(0.0, 1.0, u_audio); // Map audio value [0,1]
  colorIntensity *= 0.5; // lower effect intensity

  float angle = u_time * 0.05; 
  for (int i = 0; i < 8; i++){
    uv = abs(uv);
    uv -= 0.5;
    uv *= 1.1;
    uv *= mat2(
      cos(angle), -sin(angle),
      sin(angle), cos(angle)  
    );
  } 

  vec3 c1 = vec3(
    length(uv + vec2(colorIntensity, colorIntensity)), 
    length(uv + vec2(0.2 + colorIntensity, -0.3)),
    length(uv + vec2(0.4 + colorIntensity, -0.2))
  );

  gl_FragColor = vec4(c1, 1.0);
} 
```